// This file is intentionally without code.
// It's present so that service worker registration will work when serving from the 'app' directory.
// The version of service-worker.js that's present in the 'dist' directory is automatically
// generated by the 'generate-service-worker' gulp task, and contains code to precache resources.

/* Set up files that will always be cached */
const cacheName = "v1";
const cacheFiles = [
  './',
  'https://fonts.googleapis.com/css?family=Nunito',
  './index.html',
  './styles/main.css',
  './scripts/main.js'
];

self.addEventListener('install', function(e) {
  console.log('[ServiceWorker] Installed');

  e.waitUntil(
    caches.open(cacheName).then(function(cache) {
      console.log('[ServiceWorker] Caching cachefiles');
      return cache.addAll(cacheFiles);
    })
  );
});

self.addEventListener('activate', function(e) {
  console.log('[ServiceWorker] Activated');

  //iterate through the cache and clear out old cachefiles
  e.waitUntil(
    caches.keys().then(function(cacheNames) {
      return Promise.all(cacheNames.map(function(thisCacheName){
        if (thisCacheName !== cacheName) {
          console.log('[ServiceWorker] Removing Cached Files from ', thisCacheName);
          return caches.delete(thisCacheName);
        }
      }));
    })
  )
});

self.addEventListener('fetch', function(e) {
  console.log('[ServiceWorker] Fetching', e.request.url);
});

/* Fetch function */
fetch('http://minseoalexkim.com/wp-json/wp/v2/posts', {'mode': 'cors'}).then(
    function(response) {
      if (response.type === 'opaque') {
        console.log('Received a response, but it\'s opaque so can\'t examine it');
        // Do something with the response (i.e. cache it for offline support)
        console.log(response);
        return;
      }

      if (response.status !== 200) {
        console.log('Looks like there was a problem. Status Code: ', response.status);
        return;
      }

      // Examine the text in the response
      response.text().then(function(responseText) {
        console.log(responseText);
      });
    }
  ).catch(function(err) {
    console.log('Fetch Error :-S', err);
  });
